{"ast":null,"code":"import { useRef, useCallback, useState, useEffect } from 'react';\nimport WheelHandler from 'dom-lib/WheelHandler';\nimport scrollLeft from 'dom-lib/scrollLeft';\nimport scrollTop from 'dom-lib/scrollTop';\nimport on from 'dom-lib/on';\nimport removeStyle from 'dom-lib/removeStyle';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from './requestAnimationTimeout';\nimport useUpdateEffect from './useUpdateEffect';\nimport useMount from './useMount';\nimport { SCROLLBAR_WIDTH, TRANSITION_DURATION, BEZIER } from '../constants';\nimport isSupportTouchEvent from './isSupportTouchEvent';\nimport flushSync from './flushSync'; // Inertial sliding start time threshold\n\nvar momentumTimeThreshold = 300; // Inertial sliding start vertical distance threshold\n\nvar momentumYThreshold = 15;\n\n/**\n * Calculate the distance of inertial sliding.\n */\nvar momentum = function momentum(current, start, duration) {\n  // Inertial sliding acceleration.\n  var deceleration = 0.003;\n  var distance = current - start;\n  var speed = 2 * Math.abs(distance) / duration;\n  var destination = current + speed / deceleration * (distance < 0 ? -1 : 1);\n  return {\n    delta: current - destination,\n    duration: TRANSITION_DURATION,\n    bezier: BEZIER\n  };\n};\n/**\n * Add scroll, touch, and wheel monitoring events to the table,\n * and update the scroll position of the table.\n * @param props\n * @returns\n */\n\nvar useScrollListener = function useScrollListener(props) {\n  var data = props.data,\n    autoHeight = props.autoHeight,\n    tableBodyRef = props.tableBodyRef,\n    scrollbarXRef = props.scrollbarXRef,\n    scrollbarYRef = props.scrollbarYRef,\n    disabledScroll = props.disabledScroll,\n    loading = props.loading,\n    tableRef = props.tableRef,\n    contentWidth = props.contentWidth,\n    tableWidth = props.tableWidth,\n    scrollY = props.scrollY,\n    minScrollY = props.minScrollY,\n    minScrollX = props.minScrollX,\n    scrollX = props.scrollX,\n    setScrollX = props.setScrollX,\n    setScrollY = props.setScrollY,\n    virtualized = props.virtualized,\n    forceUpdatePosition = props.forceUpdatePosition,\n    onScroll = props.onScroll,\n    onTouchMove = props.onTouchMove,\n    onTouchStart = props.onTouchStart,\n    onTouchEnd = props.onTouchEnd,\n    height = props.height,\n    getTableHeight = props.getTableHeight,\n    contentHeight = props.contentHeight,\n    headerHeight = props.headerHeight,\n    rtl = props.rtl;\n  var wheelListener = useRef();\n  var touchStartListener = useRef();\n  var touchMoveListener = useRef();\n  var touchEndListener = useRef();\n  var _useState = useState(false),\n    isScrolling = _useState[0],\n    setScrolling = _useState[1];\n  var touchX = useRef(0);\n  var touchY = useRef(0);\n  var disableEventsTimeoutId = useRef(null);\n  var isTouching = useRef(false); // The start time within the inertial sliding range.\n\n  var momentumStartTime = useRef(0); // The vertical starting value within the inertial sliding range.\n\n  var momentumStartY = useRef(0);\n  var shouldHandleWheelX = useCallback(function (delta) {\n    if (delta === 0 || disabledScroll || loading) {\n      return false;\n    }\n    return true;\n  }, [disabledScroll, loading]);\n  var shouldHandleWheelY = useCallback(function (delta) {\n    if (delta === 0 || disabledScroll || loading || autoHeight) {\n      return false;\n    }\n    if (typeof scrollY.current === 'number' && typeof minScrollY.current === 'number') {\n      return delta >= 0 && scrollY.current > minScrollY.current || delta < 0 && scrollY.current < 0;\n    }\n  }, [autoHeight, disabledScroll, loading, minScrollY, scrollY]);\n  var debounceScrollEndedCallback = useCallback(function () {\n    disableEventsTimeoutId.current = null; // Forces the end of scrolling to be prioritized so that virtualized long lists can update rendering.\n    // There will be no scrolling white screen.\n\n    flushSync(function () {\n      return setScrolling(false);\n    });\n  }, []);\n  /**\n   * Triggered when scrolling, including: wheel/touch/scroll\n   * @param deltaX\n   * @param deltaY\n   * @param momentumOptions The configuration of inertial scrolling is used for the touch event.\n   */\n\n  var handleWheel = useCallback(function (deltaX, deltaY, momentumOptions, event) {\n    if (!tableRef.current) {\n      return;\n    }\n    var nextScrollX = contentWidth.current <= tableWidth.current ? 0 : scrollX.current - deltaX;\n    var nextScrollY = scrollY.current - deltaY;\n    var y = Math.min(0, nextScrollY < minScrollY.current ? minScrollY.current : nextScrollY);\n    var x = Math.min(0, nextScrollX < minScrollX.current ? minScrollX.current : nextScrollX);\n    setScrollX(x);\n    setScrollY(y);\n    onScroll === null || onScroll === void 0 ? void 0 : onScroll(Math.abs(x), Math.abs(y));\n    if (virtualized) {\n      // Add a state to the table during virtualized scrolling.\n      // Make it set CSS `pointer-events:none` on the DOM to avoid wrong event interaction.\n      flushSync(function () {\n        return setScrolling(true);\n      });\n      if (disableEventsTimeoutId.current) {\n        cancelAnimationTimeout(disableEventsTimeoutId.current);\n      }\n      disableEventsTimeoutId.current = requestAnimationTimeout(debounceScrollEndedCallback,\n      // When momentum is enabled, set a delay of 50ms rendering.\n      momentumOptions !== null && momentumOptions !== void 0 && momentumOptions.duration ? 50 : 0);\n    } // When the user clicks on the scrollbar, the scrollbar will be moved to the clicked position.\n\n    if ((event === null || event === void 0 ? void 0 : event.type) === 'click') {\n      /**\n       * With virtualized enabled, the list will be re-rendered on every scroll.\n       * Update the position of the rendered list with a delay.\n       * fix: https://github.com/rsuite/rsuite/issues/2378\n       */\n      setTimeout(function () {\n        return forceUpdatePosition(momentumOptions === null || momentumOptions === void 0 ? void 0 : momentumOptions.duration, momentumOptions === null || momentumOptions === void 0 ? void 0 : momentumOptions.bezier);\n      }, 0);\n      return;\n    }\n    forceUpdatePosition(momentumOptions === null || momentumOptions === void 0 ? void 0 : momentumOptions.duration, momentumOptions === null || momentumOptions === void 0 ? void 0 : momentumOptions.bezier);\n  }, [tableRef, contentWidth, tableWidth, scrollX, scrollY, minScrollY, minScrollX, setScrollX, setScrollY, onScroll, forceUpdatePosition, virtualized, debounceScrollEndedCallback]);\n  var onWheel = useCallback(function (deltaX, deltaY, momentumOptions) {\n    var _scrollbarXRef$curren, _scrollbarXRef$curren2, _scrollbarYRef$curren, _scrollbarYRef$curren2;\n    handleWheel(deltaX, deltaY, momentumOptions);\n    (_scrollbarXRef$curren = scrollbarXRef.current) === null || _scrollbarXRef$curren === void 0 ? void 0 : (_scrollbarXRef$curren2 = _scrollbarXRef$curren.onWheelScroll) === null || _scrollbarXRef$curren2 === void 0 ? void 0 : _scrollbarXRef$curren2.call(_scrollbarXRef$curren, deltaX);\n    (_scrollbarYRef$curren = scrollbarYRef.current) === null || _scrollbarYRef$curren === void 0 ? void 0 : (_scrollbarYRef$curren2 = _scrollbarYRef$curren.onWheelScroll) === null || _scrollbarYRef$curren2 === void 0 ? void 0 : _scrollbarYRef$curren2.call(_scrollbarYRef$curren, deltaY, momentumOptions !== null && momentumOptions !== void 0 && momentumOptions.duration ? true : false);\n  }, [handleWheel, scrollbarXRef, scrollbarYRef]);\n  var wheelHandler = useRef(); // Stop unending scrolling and remove transition\n\n  var stopScroll = useCallback(function () {\n    var _tableBodyRef$current, _scrollbarYRef$curren3;\n    var wheelElement = (_tableBodyRef$current = tableBodyRef.current) === null || _tableBodyRef$current === void 0 ? void 0 : _tableBodyRef$current.querySelector('.rs-table-body-wheel-area');\n    var handleElement = (_scrollbarYRef$curren3 = scrollbarYRef.current) === null || _scrollbarYRef$curren3 === void 0 ? void 0 : _scrollbarYRef$curren3.handle;\n    var transitionCSS = ['transition-duration', 'transition-timing-function'];\n    if (!virtualized && wheelElement) {\n      // Get the current translate position.\n      var matrix = window.getComputedStyle(wheelElement).getPropertyValue('transform');\n      var offsetY = Math.round(+matrix.split(')')[0].split(', ')[5]);\n      setScrollY(offsetY);\n    }\n    if (wheelElement) {\n      removeStyle(wheelElement, transitionCSS);\n    }\n    if (handleElement) {\n      removeStyle(handleElement, transitionCSS);\n    }\n  }, [scrollbarYRef, setScrollY, tableBodyRef, virtualized]); // Handle the Touch event and initialize it when touchstart is triggered.\n\n  var handleTouchStart = useCallback(function (event) {\n    var _event$touches$ = event.touches[0],\n      pageX = _event$touches$.pageX,\n      pageY = _event$touches$.pageY;\n    touchX.current = pageX;\n    touchY.current = pageY;\n    momentumStartTime.current = new Date().getTime();\n    momentumStartY.current = scrollY.current;\n    isTouching.current = true;\n    onTouchStart === null || onTouchStart === void 0 ? void 0 : onTouchStart(event); // Stop unfinished scrolling when Touch starts.\n\n    stopScroll();\n  }, [onTouchStart, scrollY, stopScroll]); // Handle the Touch event and update the scroll when touchmove is triggered.\n\n  var handleTouchMove = useCallback(function (event) {\n    if (!isTouching.current) {\n      return;\n    }\n    var _event$touches$2 = event.touches[0],\n      pageX = _event$touches$2.pageX,\n      pageY = _event$touches$2.pageY;\n    var deltaX = touchX.current - pageX;\n    var deltaY = autoHeight ? 0 : touchY.current - pageY;\n    if (!shouldHandleWheelY(deltaY) && !shouldHandleWheelX(deltaX)) {\n      return;\n    }\n    /**\n     * Prevent the default touch event when the table is scrollable.\n     * fix: https://github.com/rsuite/rsuite-table/commit/21785fc18f430519ab5885c44540d9ffc30de366#commitcomment-36236425\n     */\n\n    if (!autoHeight && shouldHandleWheelY(deltaY)) {\n      var _event$preventDefault;\n      (_event$preventDefault = event.preventDefault) === null || _event$preventDefault === void 0 ? void 0 : _event$preventDefault.call(event);\n    }\n    var now = new Date().getTime();\n    onWheel(deltaX, deltaY);\n    touchX.current = pageX;\n    touchY.current = pageY; // Record the offset value and time under the condition of triggering inertial scrolling.\n\n    if (now - momentumStartTime.current > momentumTimeThreshold) {\n      momentumStartY.current = scrollY.current;\n      momentumStartTime.current = now;\n    }\n    onTouchMove === null || onTouchMove === void 0 ? void 0 : onTouchMove(event);\n  }, [autoHeight, onWheel, onTouchMove, scrollY, shouldHandleWheelX, shouldHandleWheelY]);\n  var handleTouchEnd = useCallback(function (event) {\n    if (!isTouching.current) {\n      return;\n    }\n    isTouching.current = false;\n    var touchDuration = new Date().getTime() - momentumStartTime.current;\n    var absDeltaY = Math.abs(scrollY.current - momentumStartY.current); // Enable inertial sliding.\n\n    if (touchDuration < momentumTimeThreshold && absDeltaY > momentumYThreshold) {\n      var _momentum = momentum(scrollY.current, momentumStartY.current, touchDuration),\n        delta = _momentum.delta,\n        duration = _momentum.duration,\n        bezier = _momentum.bezier;\n      onWheel(0, delta, {\n        duration: duration,\n        bezier: bezier\n      });\n      onTouchEnd === null || onTouchEnd === void 0 ? void 0 : onTouchEnd(event);\n    }\n  }, [onWheel, onTouchEnd, scrollY]);\n  /**\n   * When the user uses the tab key in the Table, the onScroll event is triggered,\n   * and the scroll bar position should be updated at the same time.\n   * https://github.com/rsuite/rsuite/issues/234\n   */\n\n  var onScrollBody = useCallback(function (event) {\n    if (event.target !== tableBodyRef.current) {\n      return;\n    }\n    var left = scrollLeft(event.target);\n    var top = scrollTop(event.target);\n    if (top === 0 && left === 0) {\n      return;\n    }\n    onWheel(left, top);\n    scrollLeft(event.target, 0);\n    scrollTop(event.target, 0);\n  }, [onWheel, tableBodyRef]);\n  var getControlledScrollTopValue = useCallback(function (value) {\n    if (autoHeight) {\n      return [0, 0];\n    }\n    var height = getTableHeight(); // The maximum range of scrolling value is judged.\n\n    value = Math.min(value, Math.max(0, contentHeight.current - (height - headerHeight))); // The value is a value of the theoretical scroll position of the table,\n    // and the scrollY coordinate value and the value of the scroll bar position are calculated by value.\n\n    return [-value, value / contentHeight.current * (height - headerHeight)];\n  }, [autoHeight, contentHeight, getTableHeight, headerHeight]);\n  var rerender = function rerender() {\n    setScrolling(true);\n    setTimeout(function () {\n      if (tableBodyRef.current) {\n        setScrolling(false);\n      }\n    }, 0);\n  };\n  var getControlledScrollLeftValue = function getControlledScrollLeftValue(value) {\n    // The maximum range of scrolling value is judged.\n    value = Math.min(value, Math.max(0, contentWidth.current - tableWidth.current));\n    return [-value, value / contentWidth.current * tableWidth.current];\n  };\n  var onScrollTop = function onScrollTop(top) {\n    var _scrollbarYRef$curren4, _scrollbarYRef$curren5;\n    if (top === void 0) {\n      top = 0;\n    }\n    var _getControlledScrollT = getControlledScrollTopValue(top),\n      nextScrollY = _getControlledScrollT[0],\n      handleScrollY = _getControlledScrollT[1];\n    var height = getTableHeight();\n    if (!loading && nextScrollY !== scrollY.current) {\n      onScroll === null || onScroll === void 0 ? void 0 : onScroll(Math.abs(scrollX.current), Math.abs(nextScrollY));\n    }\n    setScrollY(nextScrollY);\n    scrollbarYRef === null || scrollbarYRef === void 0 ? void 0 : (_scrollbarYRef$curren4 = scrollbarYRef.current) === null || _scrollbarYRef$curren4 === void 0 ? void 0 : (_scrollbarYRef$curren5 = _scrollbarYRef$curren4.resetScrollBarPosition) === null || _scrollbarYRef$curren5 === void 0 ? void 0 : _scrollbarYRef$curren5.call(_scrollbarYRef$curren4, handleScrollY);\n    forceUpdatePosition();\n    /**\n     * After calling `scrollTop`, a white screen will appear when `virtualized` is true.\n     * The reason is that the coordinates of the DOM are directly manipulated,\n     * but the component is not re-rendered. Need to call `rerender`.\n     * Fix: rsuite#1044\n     */\n\n    if (virtualized && contentHeight.current > height) {\n      rerender();\n    }\n  };\n  var onScrollLeft = function onScrollLeft(left) {\n    var _scrollbarXRef$curren3, _scrollbarXRef$curren4;\n    if (left === void 0) {\n      left = 0;\n    }\n    var _getControlledScrollL = getControlledScrollLeftValue(left),\n      nextScrollX = _getControlledScrollL[0],\n      scrollbarX = _getControlledScrollL[1];\n    setScrollX(nextScrollX);\n    !loading && (onScroll === null || onScroll === void 0 ? void 0 : onScroll(Math.abs(nextScrollX), Math.abs(scrollY.current)));\n    scrollbarXRef === null || scrollbarXRef === void 0 ? void 0 : (_scrollbarXRef$curren3 = scrollbarXRef.current) === null || _scrollbarXRef$curren3 === void 0 ? void 0 : (_scrollbarXRef$curren4 = _scrollbarXRef$curren3.resetScrollBarPosition) === null || _scrollbarXRef$curren4 === void 0 ? void 0 : _scrollbarXRef$curren4.call(_scrollbarXRef$curren3, scrollbarX);\n    forceUpdatePosition();\n  };\n  var onScrollTo = function onScrollTo(coord) {\n    var _ref = coord || {},\n      x = _ref.x,\n      y = _ref.y;\n    if (typeof x === 'number') {\n      onScrollLeft(x);\n    }\n    if (typeof y === 'number') {\n      onScrollTop(y);\n    }\n  };\n  useUpdateEffect(function () {\n    if (scrollY.current !== 0) {\n      onScrollTop(Math.abs(scrollY.current));\n    }\n  }, [height, data]);\n  var releaseListeners = useCallback(function () {\n    var _wheelListener$curren, _touchStartListener$c, _touchMoveListener$cu, _touchEndListener$cur;\n    wheelHandler.current = null;\n    (_wheelListener$curren = wheelListener.current) === null || _wheelListener$curren === void 0 ? void 0 : _wheelListener$curren.off();\n    (_touchStartListener$c = touchStartListener.current) === null || _touchStartListener$c === void 0 ? void 0 : _touchStartListener$c.off();\n    (_touchMoveListener$cu = touchMoveListener.current) === null || _touchMoveListener$cu === void 0 ? void 0 : _touchMoveListener$cu.off();\n    (_touchEndListener$cur = touchEndListener.current) === null || _touchEndListener$cur === void 0 ? void 0 : _touchEndListener$cur.off();\n  }, []);\n  useEffect(function () {\n    var options = {\n      passive: false\n    };\n    var tableBody = tableBodyRef.current;\n    if (tableBody) {\n      // Reset the listener after props is updated.\n      releaseListeners();\n      wheelHandler.current = new WheelHandler(onWheel, shouldHandleWheelX, shouldHandleWheelY, false);\n      wheelListener.current = on(tableBody, 'wheel', wheelHandler.current.onWheel, options);\n      if (isSupportTouchEvent()) {\n        touchStartListener.current = on(tableBody, 'touchstart', handleTouchStart, options);\n        touchMoveListener.current = on(tableBody, 'touchmove', handleTouchMove, options);\n        touchEndListener.current = on(tableBody, 'touchend', handleTouchEnd, options);\n      }\n    }\n    return releaseListeners;\n  }, [handleTouchEnd, handleTouchMove, handleTouchStart, onWheel, releaseListeners, shouldHandleWheelX, shouldHandleWheelY, tableBodyRef]);\n  useMount(function () {\n    if (rtl) {\n      var _scrollbarXRef$curren5, _scrollbarXRef$curren6;\n\n      // Initialize scroll position\n      setScrollX(tableWidth.current - contentWidth.current - SCROLLBAR_WIDTH);\n      scrollbarXRef === null || scrollbarXRef === void 0 ? void 0 : (_scrollbarXRef$curren5 = scrollbarXRef.current) === null || _scrollbarXRef$curren5 === void 0 ? void 0 : (_scrollbarXRef$curren6 = _scrollbarXRef$curren5.resetScrollBarPosition) === null || _scrollbarXRef$curren6 === void 0 ? void 0 : _scrollbarXRef$curren6.call(_scrollbarXRef$curren5, -scrollX.current);\n      forceUpdatePosition();\n    }\n  });\n  var onScrollHorizontal = useCallback(function (delta) {\n    return handleWheel(delta, 0);\n  }, [handleWheel]);\n  var onScrollVertical = useCallback(function (delta, event) {\n    return handleWheel(0, delta, undefined, event);\n  }, [handleWheel]);\n  return {\n    isScrolling: isScrolling,\n    onScrollHorizontal: onScrollHorizontal,\n    onScrollVertical: onScrollVertical,\n    onScrollBody: onScrollBody,\n    onScrollTop: onScrollTop,\n    onScrollLeft: onScrollLeft,\n    onScrollTo: onScrollTo\n  };\n};\nexport default useScrollListener;","map":{"version":3,"names":["useRef","useCallback","useState","useEffect","WheelHandler","scrollLeft","scrollTop","on","removeStyle","requestAnimationTimeout","cancelAnimationTimeout","useUpdateEffect","useMount","SCROLLBAR_WIDTH","TRANSITION_DURATION","BEZIER","isSupportTouchEvent","flushSync","momentumTimeThreshold","momentumYThreshold","momentum","current","start","duration","deceleration","distance","speed","Math","abs","destination","delta","bezier","useScrollListener","props","data","autoHeight","tableBodyRef","scrollbarXRef","scrollbarYRef","disabledScroll","loading","tableRef","contentWidth","tableWidth","scrollY","minScrollY","minScrollX","scrollX","setScrollX","setScrollY","virtualized","forceUpdatePosition","onScroll","onTouchMove","onTouchStart","onTouchEnd","height","getTableHeight","contentHeight","headerHeight","rtl","wheelListener","touchStartListener","touchMoveListener","touchEndListener","_useState","isScrolling","setScrolling","touchX","touchY","disableEventsTimeoutId","isTouching","momentumStartTime","momentumStartY","shouldHandleWheelX","shouldHandleWheelY","debounceScrollEndedCallback","handleWheel","deltaX","deltaY","momentumOptions","event","nextScrollX","nextScrollY","y","min","x","type","setTimeout","onWheel","_scrollbarXRef$curren","_scrollbarXRef$curren2","_scrollbarYRef$curren","_scrollbarYRef$curren2","onWheelScroll","call","wheelHandler","stopScroll","_tableBodyRef$current","_scrollbarYRef$curren3","wheelElement","querySelector","handleElement","handle","transitionCSS","matrix","window","getComputedStyle","getPropertyValue","offsetY","round","split","handleTouchStart","_event$touches$","touches","pageX","pageY","Date","getTime","handleTouchMove","_event$touches$2","_event$preventDefault","preventDefault","now","handleTouchEnd","touchDuration","absDeltaY","_momentum","onScrollBody","target","left","top","getControlledScrollTopValue","value","max","rerender","getControlledScrollLeftValue","onScrollTop","_scrollbarYRef$curren4","_scrollbarYRef$curren5","_getControlledScrollT","handleScrollY","resetScrollBarPosition","onScrollLeft","_scrollbarXRef$curren3","_scrollbarXRef$curren4","_getControlledScrollL","scrollbarX","onScrollTo","coord","_ref","releaseListeners","_wheelListener$curren","_touchStartListener$c","_touchMoveListener$cu","_touchEndListener$cur","off","options","passive","tableBody","_scrollbarXRef$curren5","_scrollbarXRef$curren6","onScrollHorizontal","onScrollVertical","undefined"],"sources":["/Users/ethanpineda/Desktop/Personal-Projects/Ethan-main/node_modules/rsuite-table/es/utils/useScrollListener.js"],"sourcesContent":["import { useRef, useCallback, useState, useEffect } from 'react';\nimport WheelHandler from 'dom-lib/WheelHandler';\nimport scrollLeft from 'dom-lib/scrollLeft';\nimport scrollTop from 'dom-lib/scrollTop';\nimport on from 'dom-lib/on';\nimport removeStyle from 'dom-lib/removeStyle';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from './requestAnimationTimeout';\nimport useUpdateEffect from './useUpdateEffect';\nimport useMount from './useMount';\nimport { SCROLLBAR_WIDTH, TRANSITION_DURATION, BEZIER } from '../constants';\nimport isSupportTouchEvent from './isSupportTouchEvent';\nimport flushSync from './flushSync'; // Inertial sliding start time threshold\n\nvar momentumTimeThreshold = 300; // Inertial sliding start vertical distance threshold\n\nvar momentumYThreshold = 15;\n\n/**\n * Calculate the distance of inertial sliding.\n */\nvar momentum = function momentum(current, start, duration) {\n  // Inertial sliding acceleration.\n  var deceleration = 0.003;\n  var distance = current - start;\n  var speed = 2 * Math.abs(distance) / duration;\n  var destination = current + speed / deceleration * (distance < 0 ? -1 : 1);\n  return {\n    delta: current - destination,\n    duration: TRANSITION_DURATION,\n    bezier: BEZIER\n  };\n};\n/**\n * Add scroll, touch, and wheel monitoring events to the table,\n * and update the scroll position of the table.\n * @param props\n * @returns\n */\n\n\nvar useScrollListener = function useScrollListener(props) {\n  var data = props.data,\n      autoHeight = props.autoHeight,\n      tableBodyRef = props.tableBodyRef,\n      scrollbarXRef = props.scrollbarXRef,\n      scrollbarYRef = props.scrollbarYRef,\n      disabledScroll = props.disabledScroll,\n      loading = props.loading,\n      tableRef = props.tableRef,\n      contentWidth = props.contentWidth,\n      tableWidth = props.tableWidth,\n      scrollY = props.scrollY,\n      minScrollY = props.minScrollY,\n      minScrollX = props.minScrollX,\n      scrollX = props.scrollX,\n      setScrollX = props.setScrollX,\n      setScrollY = props.setScrollY,\n      virtualized = props.virtualized,\n      forceUpdatePosition = props.forceUpdatePosition,\n      onScroll = props.onScroll,\n      onTouchMove = props.onTouchMove,\n      onTouchStart = props.onTouchStart,\n      onTouchEnd = props.onTouchEnd,\n      height = props.height,\n      getTableHeight = props.getTableHeight,\n      contentHeight = props.contentHeight,\n      headerHeight = props.headerHeight,\n      rtl = props.rtl;\n  var wheelListener = useRef();\n  var touchStartListener = useRef();\n  var touchMoveListener = useRef();\n  var touchEndListener = useRef();\n\n  var _useState = useState(false),\n      isScrolling = _useState[0],\n      setScrolling = _useState[1];\n\n  var touchX = useRef(0);\n  var touchY = useRef(0);\n  var disableEventsTimeoutId = useRef(null);\n  var isTouching = useRef(false); // The start time within the inertial sliding range.\n\n  var momentumStartTime = useRef(0); // The vertical starting value within the inertial sliding range.\n\n  var momentumStartY = useRef(0);\n  var shouldHandleWheelX = useCallback(function (delta) {\n    if (delta === 0 || disabledScroll || loading) {\n      return false;\n    }\n\n    return true;\n  }, [disabledScroll, loading]);\n  var shouldHandleWheelY = useCallback(function (delta) {\n    if (delta === 0 || disabledScroll || loading || autoHeight) {\n      return false;\n    }\n\n    if (typeof scrollY.current === 'number' && typeof minScrollY.current === 'number') {\n      return delta >= 0 && scrollY.current > minScrollY.current || delta < 0 && scrollY.current < 0;\n    }\n  }, [autoHeight, disabledScroll, loading, minScrollY, scrollY]);\n  var debounceScrollEndedCallback = useCallback(function () {\n    disableEventsTimeoutId.current = null; // Forces the end of scrolling to be prioritized so that virtualized long lists can update rendering.\n    // There will be no scrolling white screen.\n\n    flushSync(function () {\n      return setScrolling(false);\n    });\n  }, []);\n  /**\n   * Triggered when scrolling, including: wheel/touch/scroll\n   * @param deltaX\n   * @param deltaY\n   * @param momentumOptions The configuration of inertial scrolling is used for the touch event.\n   */\n\n  var handleWheel = useCallback(function (deltaX, deltaY, momentumOptions, event) {\n    if (!tableRef.current) {\n      return;\n    }\n\n    var nextScrollX = contentWidth.current <= tableWidth.current ? 0 : scrollX.current - deltaX;\n    var nextScrollY = scrollY.current - deltaY;\n    var y = Math.min(0, nextScrollY < minScrollY.current ? minScrollY.current : nextScrollY);\n    var x = Math.min(0, nextScrollX < minScrollX.current ? minScrollX.current : nextScrollX);\n    setScrollX(x);\n    setScrollY(y);\n    onScroll === null || onScroll === void 0 ? void 0 : onScroll(Math.abs(x), Math.abs(y));\n\n    if (virtualized) {\n      // Add a state to the table during virtualized scrolling.\n      // Make it set CSS `pointer-events:none` on the DOM to avoid wrong event interaction.\n      flushSync(function () {\n        return setScrolling(true);\n      });\n\n      if (disableEventsTimeoutId.current) {\n        cancelAnimationTimeout(disableEventsTimeoutId.current);\n      }\n\n      disableEventsTimeoutId.current = requestAnimationTimeout(debounceScrollEndedCallback, // When momentum is enabled, set a delay of 50ms rendering.\n      momentumOptions !== null && momentumOptions !== void 0 && momentumOptions.duration ? 50 : 0);\n    } // When the user clicks on the scrollbar, the scrollbar will be moved to the clicked position.\n\n\n    if ((event === null || event === void 0 ? void 0 : event.type) === 'click') {\n      /**\n       * With virtualized enabled, the list will be re-rendered on every scroll.\n       * Update the position of the rendered list with a delay.\n       * fix: https://github.com/rsuite/rsuite/issues/2378\n       */\n      setTimeout(function () {\n        return forceUpdatePosition(momentumOptions === null || momentumOptions === void 0 ? void 0 : momentumOptions.duration, momentumOptions === null || momentumOptions === void 0 ? void 0 : momentumOptions.bezier);\n      }, 0);\n      return;\n    }\n\n    forceUpdatePosition(momentumOptions === null || momentumOptions === void 0 ? void 0 : momentumOptions.duration, momentumOptions === null || momentumOptions === void 0 ? void 0 : momentumOptions.bezier);\n  }, [tableRef, contentWidth, tableWidth, scrollX, scrollY, minScrollY, minScrollX, setScrollX, setScrollY, onScroll, forceUpdatePosition, virtualized, debounceScrollEndedCallback]);\n  var onWheel = useCallback(function (deltaX, deltaY, momentumOptions) {\n    var _scrollbarXRef$curren, _scrollbarXRef$curren2, _scrollbarYRef$curren, _scrollbarYRef$curren2;\n\n    handleWheel(deltaX, deltaY, momentumOptions);\n    (_scrollbarXRef$curren = scrollbarXRef.current) === null || _scrollbarXRef$curren === void 0 ? void 0 : (_scrollbarXRef$curren2 = _scrollbarXRef$curren.onWheelScroll) === null || _scrollbarXRef$curren2 === void 0 ? void 0 : _scrollbarXRef$curren2.call(_scrollbarXRef$curren, deltaX);\n    (_scrollbarYRef$curren = scrollbarYRef.current) === null || _scrollbarYRef$curren === void 0 ? void 0 : (_scrollbarYRef$curren2 = _scrollbarYRef$curren.onWheelScroll) === null || _scrollbarYRef$curren2 === void 0 ? void 0 : _scrollbarYRef$curren2.call(_scrollbarYRef$curren, deltaY, momentumOptions !== null && momentumOptions !== void 0 && momentumOptions.duration ? true : false);\n  }, [handleWheel, scrollbarXRef, scrollbarYRef]);\n  var wheelHandler = useRef(); // Stop unending scrolling and remove transition\n\n  var stopScroll = useCallback(function () {\n    var _tableBodyRef$current, _scrollbarYRef$curren3;\n\n    var wheelElement = (_tableBodyRef$current = tableBodyRef.current) === null || _tableBodyRef$current === void 0 ? void 0 : _tableBodyRef$current.querySelector('.rs-table-body-wheel-area');\n    var handleElement = (_scrollbarYRef$curren3 = scrollbarYRef.current) === null || _scrollbarYRef$curren3 === void 0 ? void 0 : _scrollbarYRef$curren3.handle;\n    var transitionCSS = ['transition-duration', 'transition-timing-function'];\n\n    if (!virtualized && wheelElement) {\n      // Get the current translate position.\n      var matrix = window.getComputedStyle(wheelElement).getPropertyValue('transform');\n      var offsetY = Math.round(+matrix.split(')')[0].split(', ')[5]);\n      setScrollY(offsetY);\n    }\n\n    if (wheelElement) {\n      removeStyle(wheelElement, transitionCSS);\n    }\n\n    if (handleElement) {\n      removeStyle(handleElement, transitionCSS);\n    }\n  }, [scrollbarYRef, setScrollY, tableBodyRef, virtualized]); // Handle the Touch event and initialize it when touchstart is triggered.\n\n  var handleTouchStart = useCallback(function (event) {\n    var _event$touches$ = event.touches[0],\n        pageX = _event$touches$.pageX,\n        pageY = _event$touches$.pageY;\n    touchX.current = pageX;\n    touchY.current = pageY;\n    momentumStartTime.current = new Date().getTime();\n    momentumStartY.current = scrollY.current;\n    isTouching.current = true;\n    onTouchStart === null || onTouchStart === void 0 ? void 0 : onTouchStart(event); // Stop unfinished scrolling when Touch starts.\n\n    stopScroll();\n  }, [onTouchStart, scrollY, stopScroll]); // Handle the Touch event and update the scroll when touchmove is triggered.\n\n  var handleTouchMove = useCallback(function (event) {\n    if (!isTouching.current) {\n      return;\n    }\n\n    var _event$touches$2 = event.touches[0],\n        pageX = _event$touches$2.pageX,\n        pageY = _event$touches$2.pageY;\n    var deltaX = touchX.current - pageX;\n    var deltaY = autoHeight ? 0 : touchY.current - pageY;\n\n    if (!shouldHandleWheelY(deltaY) && !shouldHandleWheelX(deltaX)) {\n      return;\n    }\n    /**\n     * Prevent the default touch event when the table is scrollable.\n     * fix: https://github.com/rsuite/rsuite-table/commit/21785fc18f430519ab5885c44540d9ffc30de366#commitcomment-36236425\n     */\n\n\n    if (!autoHeight && shouldHandleWheelY(deltaY)) {\n      var _event$preventDefault;\n\n      (_event$preventDefault = event.preventDefault) === null || _event$preventDefault === void 0 ? void 0 : _event$preventDefault.call(event);\n    }\n\n    var now = new Date().getTime();\n    onWheel(deltaX, deltaY);\n    touchX.current = pageX;\n    touchY.current = pageY; // Record the offset value and time under the condition of triggering inertial scrolling.\n\n    if (now - momentumStartTime.current > momentumTimeThreshold) {\n      momentumStartY.current = scrollY.current;\n      momentumStartTime.current = now;\n    }\n\n    onTouchMove === null || onTouchMove === void 0 ? void 0 : onTouchMove(event);\n  }, [autoHeight, onWheel, onTouchMove, scrollY, shouldHandleWheelX, shouldHandleWheelY]);\n  var handleTouchEnd = useCallback(function (event) {\n    if (!isTouching.current) {\n      return;\n    }\n\n    isTouching.current = false;\n    var touchDuration = new Date().getTime() - momentumStartTime.current;\n    var absDeltaY = Math.abs(scrollY.current - momentumStartY.current); // Enable inertial sliding.\n\n    if (touchDuration < momentumTimeThreshold && absDeltaY > momentumYThreshold) {\n      var _momentum = momentum(scrollY.current, momentumStartY.current, touchDuration),\n          delta = _momentum.delta,\n          duration = _momentum.duration,\n          bezier = _momentum.bezier;\n\n      onWheel(0, delta, {\n        duration: duration,\n        bezier: bezier\n      });\n      onTouchEnd === null || onTouchEnd === void 0 ? void 0 : onTouchEnd(event);\n    }\n  }, [onWheel, onTouchEnd, scrollY]);\n  /**\n   * When the user uses the tab key in the Table, the onScroll event is triggered,\n   * and the scroll bar position should be updated at the same time.\n   * https://github.com/rsuite/rsuite/issues/234\n   */\n\n  var onScrollBody = useCallback(function (event) {\n    if (event.target !== tableBodyRef.current) {\n      return;\n    }\n\n    var left = scrollLeft(event.target);\n    var top = scrollTop(event.target);\n\n    if (top === 0 && left === 0) {\n      return;\n    }\n\n    onWheel(left, top);\n    scrollLeft(event.target, 0);\n    scrollTop(event.target, 0);\n  }, [onWheel, tableBodyRef]);\n  var getControlledScrollTopValue = useCallback(function (value) {\n    if (autoHeight) {\n      return [0, 0];\n    }\n\n    var height = getTableHeight(); // The maximum range of scrolling value is judged.\n\n    value = Math.min(value, Math.max(0, contentHeight.current - (height - headerHeight))); // The value is a value of the theoretical scroll position of the table,\n    // and the scrollY coordinate value and the value of the scroll bar position are calculated by value.\n\n    return [-value, value / contentHeight.current * (height - headerHeight)];\n  }, [autoHeight, contentHeight, getTableHeight, headerHeight]);\n\n  var rerender = function rerender() {\n    setScrolling(true);\n    setTimeout(function () {\n      if (tableBodyRef.current) {\n        setScrolling(false);\n      }\n    }, 0);\n  };\n\n  var getControlledScrollLeftValue = function getControlledScrollLeftValue(value) {\n    // The maximum range of scrolling value is judged.\n    value = Math.min(value, Math.max(0, contentWidth.current - tableWidth.current));\n    return [-value, value / contentWidth.current * tableWidth.current];\n  };\n\n  var onScrollTop = function onScrollTop(top) {\n    var _scrollbarYRef$curren4, _scrollbarYRef$curren5;\n\n    if (top === void 0) {\n      top = 0;\n    }\n\n    var _getControlledScrollT = getControlledScrollTopValue(top),\n        nextScrollY = _getControlledScrollT[0],\n        handleScrollY = _getControlledScrollT[1];\n\n    var height = getTableHeight();\n\n    if (!loading && nextScrollY !== scrollY.current) {\n      onScroll === null || onScroll === void 0 ? void 0 : onScroll(Math.abs(scrollX.current), Math.abs(nextScrollY));\n    }\n\n    setScrollY(nextScrollY);\n    scrollbarYRef === null || scrollbarYRef === void 0 ? void 0 : (_scrollbarYRef$curren4 = scrollbarYRef.current) === null || _scrollbarYRef$curren4 === void 0 ? void 0 : (_scrollbarYRef$curren5 = _scrollbarYRef$curren4.resetScrollBarPosition) === null || _scrollbarYRef$curren5 === void 0 ? void 0 : _scrollbarYRef$curren5.call(_scrollbarYRef$curren4, handleScrollY);\n    forceUpdatePosition();\n    /**\n     * After calling `scrollTop`, a white screen will appear when `virtualized` is true.\n     * The reason is that the coordinates of the DOM are directly manipulated,\n     * but the component is not re-rendered. Need to call `rerender`.\n     * Fix: rsuite#1044\n     */\n\n    if (virtualized && contentHeight.current > height) {\n      rerender();\n    }\n  };\n\n  var onScrollLeft = function onScrollLeft(left) {\n    var _scrollbarXRef$curren3, _scrollbarXRef$curren4;\n\n    if (left === void 0) {\n      left = 0;\n    }\n\n    var _getControlledScrollL = getControlledScrollLeftValue(left),\n        nextScrollX = _getControlledScrollL[0],\n        scrollbarX = _getControlledScrollL[1];\n\n    setScrollX(nextScrollX);\n    !loading && (onScroll === null || onScroll === void 0 ? void 0 : onScroll(Math.abs(nextScrollX), Math.abs(scrollY.current)));\n    scrollbarXRef === null || scrollbarXRef === void 0 ? void 0 : (_scrollbarXRef$curren3 = scrollbarXRef.current) === null || _scrollbarXRef$curren3 === void 0 ? void 0 : (_scrollbarXRef$curren4 = _scrollbarXRef$curren3.resetScrollBarPosition) === null || _scrollbarXRef$curren4 === void 0 ? void 0 : _scrollbarXRef$curren4.call(_scrollbarXRef$curren3, scrollbarX);\n    forceUpdatePosition();\n  };\n\n  var onScrollTo = function onScrollTo(coord) {\n    var _ref = coord || {},\n        x = _ref.x,\n        y = _ref.y;\n\n    if (typeof x === 'number') {\n      onScrollLeft(x);\n    }\n\n    if (typeof y === 'number') {\n      onScrollTop(y);\n    }\n  };\n\n  useUpdateEffect(function () {\n    if (scrollY.current !== 0) {\n      onScrollTop(Math.abs(scrollY.current));\n    }\n  }, [height, data]);\n  var releaseListeners = useCallback(function () {\n    var _wheelListener$curren, _touchStartListener$c, _touchMoveListener$cu, _touchEndListener$cur;\n\n    wheelHandler.current = null;\n    (_wheelListener$curren = wheelListener.current) === null || _wheelListener$curren === void 0 ? void 0 : _wheelListener$curren.off();\n    (_touchStartListener$c = touchStartListener.current) === null || _touchStartListener$c === void 0 ? void 0 : _touchStartListener$c.off();\n    (_touchMoveListener$cu = touchMoveListener.current) === null || _touchMoveListener$cu === void 0 ? void 0 : _touchMoveListener$cu.off();\n    (_touchEndListener$cur = touchEndListener.current) === null || _touchEndListener$cur === void 0 ? void 0 : _touchEndListener$cur.off();\n  }, []);\n  useEffect(function () {\n    var options = {\n      passive: false\n    };\n    var tableBody = tableBodyRef.current;\n\n    if (tableBody) {\n      // Reset the listener after props is updated.\n      releaseListeners();\n      wheelHandler.current = new WheelHandler(onWheel, shouldHandleWheelX, shouldHandleWheelY, false);\n      wheelListener.current = on(tableBody, 'wheel', wheelHandler.current.onWheel, options);\n\n      if (isSupportTouchEvent()) {\n        touchStartListener.current = on(tableBody, 'touchstart', handleTouchStart, options);\n        touchMoveListener.current = on(tableBody, 'touchmove', handleTouchMove, options);\n        touchEndListener.current = on(tableBody, 'touchend', handleTouchEnd, options);\n      }\n    }\n\n    return releaseListeners;\n  }, [handleTouchEnd, handleTouchMove, handleTouchStart, onWheel, releaseListeners, shouldHandleWheelX, shouldHandleWheelY, tableBodyRef]);\n  useMount(function () {\n    if (rtl) {\n      var _scrollbarXRef$curren5, _scrollbarXRef$curren6;\n\n      // Initialize scroll position\n      setScrollX(tableWidth.current - contentWidth.current - SCROLLBAR_WIDTH);\n      scrollbarXRef === null || scrollbarXRef === void 0 ? void 0 : (_scrollbarXRef$curren5 = scrollbarXRef.current) === null || _scrollbarXRef$curren5 === void 0 ? void 0 : (_scrollbarXRef$curren6 = _scrollbarXRef$curren5.resetScrollBarPosition) === null || _scrollbarXRef$curren6 === void 0 ? void 0 : _scrollbarXRef$curren6.call(_scrollbarXRef$curren5, -scrollX.current);\n      forceUpdatePosition();\n    }\n  });\n  var onScrollHorizontal = useCallback(function (delta) {\n    return handleWheel(delta, 0);\n  }, [handleWheel]);\n  var onScrollVertical = useCallback(function (delta, event) {\n    return handleWheel(0, delta, undefined, event);\n  }, [handleWheel]);\n  return {\n    isScrolling: isScrolling,\n    onScrollHorizontal: onScrollHorizontal,\n    onScrollVertical: onScrollVertical,\n    onScrollBody: onScrollBody,\n    onScrollTop: onScrollTop,\n    onScrollLeft: onScrollLeft,\n    onScrollTo: onScrollTo\n  };\n};\n\nexport default useScrollListener;"],"mappings":"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"},"metadata":{},"sourceType":"module"}